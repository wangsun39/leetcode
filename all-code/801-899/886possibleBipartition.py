# 给定一组n人（编号为1, 2, ..., n）， 我们想把每个人分进任意大小的两组。每个人都可能不喜欢其他人，那么他们不应该属于同一组。
#
# 给定整数n和数组
# dislikes ，其中dislikes[i] = [ai, bi] ，表示不允许将编号为ai和bi的人归入同一组。当可以用这种方法将所有人分进两组时，返回true；否则返回false。
#
#
#
# 示例
# 1：
#
# 输入：n = 4, dislikes = [[1, 2], [1, 3], [2, 4]]
# 输出：true
# 解释：group1[1, 4], group2[2, 3]
# 示例
# 2：
#
# 输入：n = 3, dislikes = [[1, 2], [1, 3], [2, 3]]
# 输出：false
# 示例
# 3：
#
# 输入：n = 5, dislikes = [[1, 2], [2, 3], [3, 4], [4, 5], [1, 5]]
# 输出：false
#
# 提示：
#
# 1 <= n <= 2000
# 0 <= dislikes.length <= 104
# dislikes[i].length == 2
# 1 <= dislikes[i][j] <= n
# ai < bi
# dislikes中每一组都不同

from typing import List
from collections import defaultdict
from functools import cache

class Solution:
    def possibleBipartition(self, n: int, dislikes: List[List[int]]) -> bool:
        dk = defaultdict(set)
        for x, y in dislikes:
            dk[x].add(y)
            dk[y].add(x)
        flag = [0] * n
        def dfs(x, sign):  # sign 表示两组，1和-1表示分到组里，0表示未分配
            if sign == 0 and flag[x - 1]:
                return True
            if sign == 0: sign = 1
            if flag[x - 1] == sign:
                return True
            elif flag[x - 1] == 0:
                flag[x - 1] = sign
                for y in dk[x]:
                    res = dfs(y, -sign)
                    if not res:
                        return False
                return True
            else:
                return False
        return all(dfs(k, 0) for k in dk)

so = Solution()
print(so.possibleBipartition(n = 3, dislikes = [[1, 2], [1, 3], [2, 3]]))
print(so.possibleBipartition(n = 100, dislikes = [[26,47],[20,25],[23,60],[6,28],[30,41],[34,52],[5,57],[76,100],[39,92],[65,84],[28,88],[64,88],[31,80],[26,98],[67,80],[2,27],[68,92],[15,34],[39,97],[85,87],[53,62],[27,97],[36,67],[57,85],[8,38],[59,61],[14,34],[7,44],[35,52],[53,73],[54,73],[31,89],[44,55],[10,66],[5,93],[22,88],[83,90],[1,15],[30,51],[39,43],[29,89],[61,100],[68,97],[6,14],[82,87],[45,97],[61,94],[62,84],[16,29],[73,92],[35,61],[38,90],[43,45],[24,28],[40,86],[10,19],[39,57],[4,11],[35,79],[22,74],[14,95],[70,72],[43,83],[3,60],[36,37],[65,81],[29,75],[40,93],[84,89],[39,54],[13,63],[11,19],[12,20],[30,99],[72,90],[58,68],[21,48],[5,29],[59,64],[86,88],[2,82],[8,33],[32,46],[17,90],[54,82],[34,44],[2,4],[31,82],[7,70],[47,95],[1,18],[2,25],[50,63],[45,76],[2,51],[56,60],[23,55],[32,37],[23,45],[6,47],[37,42],[44,49],[9,17],[45,52],[43,71],[46,80],[87,88],[7,9],[20,68],[27,84],[33,57],[40,44],[39,76],[11,32],[35,63],[42,46],[16,53],[10,55],[18,55],[14,17],[10,17],[25,31],[56,91],[41,92],[16,90],[64,100],[70,78],[69,100],[25,43],[39,69],[15,73],[16,44],[14,24],[38,53],[3,85],[10,24],[67,73],[33,96],[18,65],[21,84],[56,72],[44,91],[32,84],[14,36],[66,97],[15,33],[14,78],[82,97],[54,62],[63,72],[55,63],[59,69],[78,90],[29,66],[42,58],[13,54],[45,57],[4,87],[90,100],[25,53],[33,63],[70,82],[6,11],[8,42],[31,36],[64,94],[25,47],[28,83],[75,81],[90,91],[92,100],[17,61],[64,83],[44,51],[55,67],[17,87],[11,25],[33,84],[57,94],[67,99],[14,88],[38,98],[5,23],[24,84],[20,36],[15,66],[41,47],[63,68],[18,27],[53,94],[36,58],[50,92],[31,66],[9,24],[42,54],[4,90],[17,98],[89,98],[2,83],[96,99],[86,99],[52,55],[74,86],[61,83],[62,67],[27,47],[28,40],[31,45],[27,69],[23,27],[66,98],[77,98],[65,79],[7,69],[57,82],[80,93],[43,99],[32,76],[20,39],[6,22],[54,60],[47,49],[13,64],[11,80],[9,32],[16,37],[25,96],[90,94],[54,72],[8,17],[30,68],[8,73],[22,91],[2,21],[46,77],[68,90],[91,98],[27,61],[23,51],[61,95],[23,41],[52,73],[15,71],[79,83],[38,63],[67,95],[4,29],[46,62],[23,72],[9,82],[74,96],[52,80],[31,38],[5,63],[11,36],[10,51],[55,90],[3,80],[64,66],[44,66],[34,97],[46,65],[23,65],[4,31],[37,83],[14,75],[9,91],[24,93],[78,87],[18,42],[89,93],[3,89],[67,77],[39,44],[76,89],[19,64],[7,93],[68,93],[10,72],[22,49],[70,95],[75,96],[6,20],[36,76],[34,76],[29,36],[12,92],[29,94],[75,92],[36,48],[31,88],[38,58],[44,78],[14,51],[9,99],[45,70],[19,47],[45,64],[28,74],[23,77],[82,84],[45,96],[2,39],[15,91],[33,58],[30,34],[17,31],[48,91],[11,33],[31,65],[77,87],[22,80],[41,93],[69,91],[66,79],[13,31],[19,52],[56,59],[26,57],[28,55],[97,100],[15,78],[54,88],[31,78],[29,74],[55,84],[12,63],[30,94],[12,81],[91,92],[33,97],[29,41],[8,77],[22,77],[21,63],[35,93],[37,51],[59,67],[52,89],[48,73],[61,73],[26,93],[33,46],[51,79],[2,77],[18,40],[12,54],[39,46],[65,67],[76,91],[8,94],[34,84],[43,65],[42,97],[46,78],[3,7],[36,96],[22,55],[14,80],[20,35],[70,89],[28,35],[29,34],[2,35],[4,52],[31,60],[28,72],[22,95],[14,49],[47,77],[8,65],[9,75],[63,74],[19,23],[93,100],[35,81],[11,77],[29,38],[52,85],[79,95],[42,47],[25,44],[79,99],[46,88],[19,54],[33,64],[46,66],[69,99],[34,92],[6,30],[15,72],[7,31],[61,78],[75,76],[40,58],[4,64],[7,53],[5,76],[12,57],[10,25],[67,72],[20,73],[46,99],[7,96],[51,58],[9,95],[8,36],[61,71],[36,47],[53,75],[36,53],[8,82],[39,52],[47,88],[3,99],[21,92],[56,80],[13,96],[70,83],[29,32],[25,64],[81,99],[4,54],[1,92],[9,12],[51,67],[37,49],[51,98],[39,63],[7,86],[42,86],[5,98],[27,29],[69,94],[57,71],[9,19],[34,67],[7,10],[30,38],[50,67],[63,71],[29,83],[78,79],[24,97],[6,81],[66,81],[64,65],[5,52],[19,56],[36,44],[4,30]]))
print(so.possibleBipartition(n = 100, dislikes = [[32,54],[9,84],[36,68],[76,100],[27,68],[72,92],[18,45],[74,94],[5,74],[40,66],[7,68],[48,59],[45,61],[17,90],[13,20],[32,87],[14,43],[20,58],[18,86],[36,50],[45,78],[80,94],[3,40],[75,97],[6,23],[32,35],[39,83],[6,67],[12,50],[20,82],[5,93],[45,54],[21,90],[19,70],[24,59],[3,11],[15,43],[33,74],[20,47],[12,90],[9,40],[81,97],[72,97],[31,56],[48,90],[72,80],[29,52],[65,88],[18,57],[39,57],[44,68],[12,29],[8,69],[45,64],[25,37],[47,62],[80,98],[63,65],[17,43],[24,99],[6,87],[4,99],[41,74],[40,58],[3,31],[26,45],[32,72],[81,83],[54,56],[32,46],[61,74],[27,70],[24,68],[1,70],[52,70],[89,92],[40,68],[44,58],[21,95],[7,92],[68,94],[57,87],[27,57],[2,45],[22,40],[34,56],[44,97],[1,95],[2,71],[8,14],[78,95],[75,95],[44,49],[77,93],[38,59],[20,73],[45,52],[10,22],[41,91],[46,80],[67,97],[84,96],[48,96],[6,12],[82,85],[11,25],[24,82],[1,80],[17,30],[79,92],[27,74],[40,50],[1,74],[44,70],[69,90],[16,90],[70,78],[57,75],[80,100],[2,63],[29,53],[27,45],[33,50],[73,75],[32,41],[77,88],[28,93],[19,86],[59,77],[42,93],[15,59],[56,72],[85,96],[32,84],[33,90],[8,12],[68,81],[23,66],[3,39],[60,76],[86,94],[63,72],[24,70],[2,74],[7,51],[26,68],[40,73],[49,62],[21,93],[44,82],[41,80],[55,96],[23,91],[36,97],[56,62],[3,44],[9,65],[23,49],[6,11],[37,71],[2,43],[8,42],[30,62],[1,93],[8,48],[18,32],[36,51],[14,90],[66,89],[20,68],[24,63],[1,3],[28,29],[61,96],[3,21],[35,80],[32,62],[14,66],[62,88],[74,98],[10,43],[13,78],[26,86],[9,54],[75,86],[31,66],[7,76],[40,96],[68,78],[2,3],[34,51],[68,84],[66,100],[4,29],[8,94],[24,91],[40,59],[49,79],[74,81],[52,97],[45,62],[10,96],[22,64],[43,77],[20,57],[10,74],[62,74],[25,84],[32,34],[38,88],[26,88],[39,90],[58,72],[78,88],[75,90],[43,53],[8,17],[13,52],[41,76],[23,63],[16,74],[21,91],[41,86],[14,45],[18,80],[45,72],[80,84],[35,71],[53,56],[72,99],[86,87],[34,73],[30,60],[29,89],[25,26],[67,95],[20,70],[32,100],[72,93],[25,60],[43,81],[85,90],[70,75],[27,50],[25,38],[3,61],[24,86],[25,72],[6,26],[5,63],[18,25],[8,31],[7,57],[28,66],[11,58],[74,84],[22,85],[46,95],[30,98],[85,99],[3,28],[45,84],[22,62],[5,30],[9,20],[30,46],[54,59],[52,95],[63,79],[26,95],[9,61],[6,55],[10,58],[55,73],[58,100],[50,62],[83,84],[58,78],[39,96],[45,77],[2,50],[85,86],[13,100],[46,50],[10,82],[34,76],[15,82],[11,82],[60,63],[72,96],[7,47],[31,50],[37,43],[4,80],[40,80],[3,100],[45,53],[17,82],[22,89],[87,99],[2,13],[91,100],[16,30],[40,43],[30,34],[31,59],[15,45],[17,49],[30,77],[44,47],[9,27],[52,56],[39,56],[11,29],[47,72],[69,91],[44,99],[14,92],[33,51],[25,78],[37,86],[2,88],[48,82],[10,49],[18,49],[6,84],[53,68],[17,76],[54,76],[13,62],[29,100],[15,56],[33,91],[1,50],[4,25],[59,67],[81,82],[54,57],[2,83],[8,34],[34,45],[63,87],[30,65],[44,59],[19,66],[43,65],[33,96],[47,53],[29,34],[62,80],[16,25],[6,44],[78,92],[79,86],[9,14],[40,76],[3,64],[4,82],[8,21],[30,72],[38,56],[18,76],[7,97],[14,91],[70,84],[10,91],[48,71],[77,97],[40,45],[36,83],[17,29],[13,79],[5,50],[40,51],[53,95],[1,73],[49,87],[42,73],[1,99],[8,98],[39,58],[26,29],[18,71],[16,91],[67,88],[11,66],[81,95],[39,68],[28,47],[2,86],[8,61],[5,59],[38,80],[51,72],[49,72],[29,72],[55,86],[64,70],[29,98],[1,30],[58,89],[22,67],[19,63],[7,96],[18,88],[77,83],[17,58],[26,91],[50,81],[63,81],[65,90],[13,53],[20,80],[16,73],[44,83],[46,76],[25,52],[26,51],[58,61],[7,13],[11,86],[62,86],[35,51],[4,92],[13,46],[5,88],[51,98],[25,27],[28,96],[43,94],[48,99],[38,99],[22,38],[5,22],[6,33],[30,38],[36,99],[48,95],[9,53],[19,45],[38,95],[53,93],[49,85],[29,77],[9,31],[55,91],[1,97],[66,81],[20,76],[53,97],[66,75],[22,78],[34,96],[20,51],[10,59],[21,50],[28,51]]))
print(so.possibleBipartition(n = 5, dislikes = [[1, 2], [2, 3], [3, 4], [4, 5], [1, 5]]))

print(so.possibleBipartition(n = 4, dislikes = [[1, 2], [1, 3], [2, 4]]))

